// Prisma schema for OKR Manager user registration
// You may need to add more models for OKRs, teams, etc. later

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  role          String
  status        String // "pending", "active", etc.
  isLineManager Boolean  @default(false)
  isSuperUser   Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  verificationTokens VerificationToken[]
  objectives          Objective[]
}

model VerificationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Objective {
  id          Int           @id @default(autoincrement())
  guid        String        @unique @default(uuid())
  title       String
  description String
  dueDate     DateTime
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  keyResults  KeyResult[]
}

model KeyResult {
  id            Int                @id @default(autoincrement())
  title         String
  metric        String
  targetValue   String
  objective     Objective          @relation(fields: [objectiveId], references: [id])
  objectiveId   Int
  successCriteria SuccessCriteria[]
  reviews       KeyResultReview[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model SuccessCriteria {
  id          Int        @id @default(autoincrement())
  description String
  threshold   String
  keyResult   KeyResult  @relation(fields: [keyResultId], references: [id])
  keyResultId Int
}

model KeyResultReview {
  id           Int      @id @default(autoincrement())
  keyResult    KeyResult @relation(fields: [keyResultId], references: [id])
  keyResultId  Int
  month        Int      // 1-12
  year         Int
  progress     Int      // e.g., 0-100
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([keyResultId, month, year])
}
